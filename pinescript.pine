// Â© 2024 Your Name or Company
// Updated Cipher B style indicator with corrected scaling, alert conditions, and divergence lines

//@version=5
indicator("Cipher B Free - Custom", overlay=false, max_lines_count=500, max_labels_count=500)

// RSI + MA
rsiSource = close
rsiLength = input.int(14, "RSI Length")
rsi = ta.rsi(rsiSource, rsiLength)
rsiMaLength = input.int(14, "RSI MA Length")
rsiMa = ta.sma(rsi, rsiMaLength)

// WaveTrend (WT)
wtChannelLen = input.int(9, title="WT Channel Length")
wtAverageLen = input.int(12, title="WT Average Length")
wtSource = hlc3
esa = ta.ema(wtSource, wtChannelLen)
d = ta.ema(math.abs(wtSource - esa), wtChannelLen)
ci = (wtSource - esa) / (0.015 * d)
tci = ta.ema(ci, wtAverageLen)
wt = tci
wt1 = ta.ema(tci, 3)

// Money Flow Index (MFI)
mfiLength = input.int(14, "MFI Length")
mfi = ta.mfi(high, low, close, volume, mfiLength)

// MACD Histogram
[macdLine, signalLine, _] = ta.macd(close, 12, 26, 9)
macdHist = macdLine - signalLine

// Smoothing options
smoothK = input.int(3, "%K Smoothing")
smoothD = input.int(3, "D Smoothing")
stochK = ta.sma(ta.stoch(close, high, low, 14), smoothK)
stochD = ta.sma(stochK, smoothD)

// Scaling outputs between 100 and -100
scaled_rsi = (rsi - 50) * 2
scaled_rsiMa = (rsiMa - 50) * 2
scaled_wt = wt * 10
scaled_wt1 = wt1 * 10
scaled_mfi = (mfi - 50) * 2
scaled_macd = macdHist * 10
scaled_stochK = (stochK - 50) * 2
scaled_stochD = (stochD - 50) * 2

// Plot RSI
plot(scaled_rsi, title="RSI", color=color.orange, linewidth=1)
plot(scaled_rsiMa, title="RSI MA", color=color.red, linewidth=1)

// Plot WaveTrend
plot(scaled_wt, title="WaveTrend", color=color.teal, linewidth=1)
plot(scaled_wt1, title="WaveTrend Signal", color=color.lime, linewidth=1)

// Plot MFI
plot(scaled_mfi, title="MFI", color=color.purple, linewidth=1)

// Plot MACD Histogram
plot(scaled_macd, title="MACD Histogram", color=color.fuchsia, style=plot.style_columns, linewidth=1)

// Plot Stochastic
plot(scaled_stochK, title="Stochastic %K", color=color.navy, linewidth=1)
plot(scaled_stochD, title="Stochastic %D", color=color.maroon, linewidth=1)

// Overbought/Oversold levels
hline(60, "Overbought", color=color.gray, linestyle=hline.style_dotted)
hline(-60, "Oversold", color=color.gray, linestyle=hline.style_dotted)
hline(0, "Zero", color=color.white)

// Divergence detection and marker plotting
bullDiv = ta.pivotlow(scaled_wt, 5, 5) and scaled_wt[5] < scaled_wt[6] and close[5] < close[6]
bearDiv = ta.pivothigh(scaled_wt, 5, 5) and scaled_wt[5] > scaled_wt[6] and close[5] > close[6]

plotshape(bullDiv, title="Bullish Divergence", location=location.bottom, style=shape.triangleup, color=color.green, size=size.small)
plotshape(bearDiv, title="Bearish Divergence", location=location.top, style=shape.triangledown, color=color.red, size=size.small)

// Alert Conditions
alertcondition(bullDiv, title="Bullish Divergence Alert", message="Bullish divergence detected on Cipher B")
alertcondition(bearDiv, title="Bearish Divergence Alert", message="Bearish divergence detected on Cipher B")

// Draw lines connecting divergence points
var line lastBullLine = na
var line lastBearLine = na

if bullDiv
    if na(lastBullLine)
        lastBullLine := line.new(bar_index[5], scaled_wt[5], bar_index, scaled_wt, color=color.green, width=1)
    else
        line.set_xy1(lastBullLine, bar_index[5], scaled_wt[5])
        line.set_xy2(lastBullLine, bar_index, scaled_wt)

if bearDiv
    if na(lastBearLine)
        lastBearLine := line.new(bar_index[5], scaled_wt[5], bar_index, scaled_wt, color=color.red, width=1)
    else
        line.set_xy1(lastBearLine, bar_index[5], scaled_wt[5])
        line.set_xy2(lastBearLine, bar_index, scaled_wt)

// End of indicator
